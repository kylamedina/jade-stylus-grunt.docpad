///////////////////////////////////
// Based on Semantic Grid System //
///////////////////////////////////

// Grid Settings

// Defaults which you can freely override
column-width = 60px
gutter-width = 20px
colNum = 16

// Utility variable â€” you should never need to modify this
_gridsystem-width = (column-width + gutter-width) * colNum

// Set @total-width to 100% for a fluid layout
total-width = 100%

gap = total-width * (((gutter-width * 0.5) / _gridsystem-width ) * 2)

// Correcting percentage-to-pixel rounding errors in IE6 & 7
// See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// Override @min with the minimum width of your layout
min-width = 1440px
correction = (((0.5 / min-width) * 100) * 1%)



//////////
// GRID //
//////////

body,html
	width 100%
	height 100%
	clearfix()

row(colNum = colNum)
	display block
	width total-width * ((gutter-width + _gridsystem-width ) / _gridsystem-width)
	margin 0 total-width * (((gutter-width * 0.5) / _gridsystem-width ) * - 1)
	*width total-width * ((gutter-width + _gridsystem-width ) / _gridsystem-width)-correction
	*margin 0 total-width * (((gutter-width * 0.5) / _gridsystem-width ) * - 1)-correction
	clearfix()
col(x = 16, colNum = colNum)
	display inline
	float left
	overflow hidden
	width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)
	margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)
	*width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)-correction
	*margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)-correction

offset(offset = 1)
	margin-left total-width*(((gutter-width+column-width)*offset + (gutter-width*0.5))/_gridsystem-width)


// MIXINS

// Page Wrapper
wrapper($site-width = 70%)
	$site-margin = ((100% - $site-width) / 2)
	margin-left: $site-margin
	margin-right: $site-margin
	transition: margin 0.3s ease-out

// CSS3 column mixin
columns(x = 16,colNum = colNum)
	theWidth = total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)
	column-count: x
	-moz-column-width: theWidth
	-webkit-column-width: theWidth
	column-width: theWidth
	-moz-column-gap gap
	-webkit-column-gap gap
	column-gap gap



// This is a Flexbox with a bunch of settings
// pack = align = center will center object
// type = flex, inline-flex
// dir = column, row
// pack = start, end, justify & center
// align = start, end, center, baseline & stretch
flex(x, type, dir, wrap, pack, align, Width, colNum=colNum,type=inline-flex,dir=row,wrap=nowrap,pack=start,align=stretch)
	display type
	flex-flow dir wrap
	flex-pack pack
	flex-align align
	& > div
		if Width
			width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)
			margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)
			*width total-width * ((((gutter-width + column-width ) * x) - gutter-width) / _gridsystem-width)-correction
			*margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)-correction
		else
			margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)
			*margin 0 total-width * ( (gutter-width * 0.5) / _gridsystem-width)-correction


// QUICK CHEATS
.wrap
	wrapper()
	clearfix()
.row
	clearfix()